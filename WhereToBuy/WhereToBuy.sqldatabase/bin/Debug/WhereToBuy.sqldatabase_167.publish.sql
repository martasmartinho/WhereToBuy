/*
Deployment script for WhereToBuy

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WhereToBuy"
:setvar DefaultFilePrefix "WhereToBuy"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- cria a base de dados se não exstir ainda
IF NOT EXISTS(SELECT [Name] FROM [SYS].[DATABASES] WHERE [Name] = 'WhereToBuy')
BEGIN
	CREATE DATABASE WhereToBuy COLLATE LATIN1_GENERAL_CI_AS	-- ATENÇÃO QUE TEM TAMBÉM QUE SE ALTERAR A COLLATION NAS PROPRIEDADES DESTE PROJETO
END						
GO

GO
/*
The type for column Codigo in table [dbo].[AvisosTipo] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[AvisosTipo])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[CategoriasMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[CategoriasMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Codigo in table [dbo].[Complementos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Complementos])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[ComplementosMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MapTo in table [dbo].[ComplementosMatching] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[ComplementosMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column ComplementoCodigo in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column EstadoCodigo in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column FornecedorCodigo in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column ImpostoCodigo in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column MarcaCodigo in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column StockCodigo in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column StockCodigoSubstituto in table [dbo].[Cotacoes] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Cotacoes])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column AvisoTipoCodigo in table [dbo].[CotacoesAvisos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column FornecedorCodigo in table [dbo].[CotacoesAvisos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[CotacoesAvisos])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[CotacoesRegras] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MarcaCodigo in table [dbo].[CotacoesRegras] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column StockCodigo in table [dbo].[CotacoesRegras] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column StockCodigoSubstituto in table [dbo].[CotacoesRegras] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[CotacoesRegras])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Codigo in table [dbo].[Estados] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Estados])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[EstadosMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MapTo in table [dbo].[EstadosMatching] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[EstadosMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Codigo in table [dbo].[Fornecedores] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Fornecedores])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Codigo in table [dbo].[Impostos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Impostos])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[ImpostosMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MapTo in table [dbo].[ImpostosMatching] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[ImpostosMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Codigo in table [dbo].[Marcas] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Marcas])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[MarcasMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MapTo in table [dbo].[MarcasMatching] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[MarcasMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[Produtos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column ImpostoCodigo in table [dbo].[Produtos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MarcaCodigo in table [dbo].[Produtos] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column StockCodigo in table [dbo].[Produtos] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column StockCodigo_U1 in table [dbo].[Produtos] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column StockCodigo_U2 in table [dbo].[Produtos] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.

The type for column StockCodigo_U3 in table [dbo].[Produtos] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Produtos])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[ProdutosDetalhe] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[ProdutosDetalhe])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[ProdutosMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column StockCodigoSubstituto in table [dbo].[ProdutosMatching] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[ProdutosMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Codigo in table [dbo].[Stocks] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Stocks])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column FornecedorCodigo in table [dbo].[StocksMatching] is currently  NVARCHAR (20) NOT NULL but is being changed to  NVARCHAR (5) NOT NULL. Data loss could occur.

The type for column MapTo in table [dbo].[StocksMatching] is currently  NVARCHAR (20) NULL but is being changed to  NVARCHAR (5) NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[StocksMatching])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping FK_CotacoesAvisos_AvisoTipo...';


GO
ALTER TABLE [dbo].[CotacoesAvisos] DROP CONSTRAINT [FK_CotacoesAvisos_AvisoTipo];


GO
PRINT N'Dropping FK_CategoriasMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[CategoriasMatching] DROP CONSTRAINT [FK_CategoriasMatching_Fornecedor];


GO
PRINT N'Dropping FK_CategoriasMatching_MapTo...';


GO
ALTER TABLE [dbo].[CategoriasMatching] DROP CONSTRAINT [FK_CategoriasMatching_MapTo];


GO
PRINT N'Dropping FK_ComplementosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ComplementosMatching] DROP CONSTRAINT [FK_ComplementosMatching_MapTo];


GO
PRINT N'Dropping FK_Cotacoes_Complemento...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Complemento];


GO
PRINT N'Dropping FK_ComplementosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ComplementosMatching] DROP CONSTRAINT [FK_ComplementosMatching_Fornecedor];


GO
PRINT N'Dropping FK_Cotacoes_Marca...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Marca];


GO
PRINT N'Dropping FK_Cotacoes_Categoria...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Categoria];


GO
PRINT N'Dropping FK_Cotacoes_Stock...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Stock];


GO
PRINT N'Dropping FK_Cotacoes_StockSubstituto...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_StockSubstituto];


GO
PRINT N'Dropping FK_Cotacoes_Imposto...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Imposto];


GO
PRINT N'Dropping FK_Cotacoes_Produto...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Produto];


GO
PRINT N'Dropping FK_Cotacoes_Fornecedor...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Fornecedor];


GO
PRINT N'Dropping FK_Cotacoes_Estado...';


GO
ALTER TABLE [dbo].[Cotacoes] DROP CONSTRAINT [FK_Cotacoes_Estado];


GO
PRINT N'Dropping FK_CotacoesAvisos_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesAvisos] DROP CONSTRAINT [FK_CotacoesAvisos_Fornecedor];


GO
PRINT N'Dropping FK_CotacoesRegras_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesRegras] DROP CONSTRAINT [FK_CotacoesRegras_Fornecedor];


GO
PRINT N'Dropping FK_CotacoesRegras_Marca...';


GO
ALTER TABLE [dbo].[CotacoesRegras] DROP CONSTRAINT [FK_CotacoesRegras_Marca];


GO
PRINT N'Dropping FK_CotacoesRegras_Categoria...';


GO
ALTER TABLE [dbo].[CotacoesRegras] DROP CONSTRAINT [FK_CotacoesRegras_Categoria];


GO
PRINT N'Dropping FK_CotacoesRegras_Stock...';


GO
ALTER TABLE [dbo].[CotacoesRegras] DROP CONSTRAINT [FK_CotacoesRegras_Stock];


GO
PRINT N'Dropping FK_CotacoesRegras_StockSubstituto...';


GO
ALTER TABLE [dbo].[CotacoesRegras] DROP CONSTRAINT [FK_CotacoesRegras_StockSubstituto];


GO
PRINT N'Dropping FK_EstadosMatching_MapTo...';


GO
ALTER TABLE [dbo].[EstadosMatching] DROP CONSTRAINT [FK_EstadosMatching_MapTo];


GO
PRINT N'Dropping FK_EstadosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[EstadosMatching] DROP CONSTRAINT [FK_EstadosMatching_Fornecedor];


GO
PRINT N'Dropping FK_ProdutosDetalhe_Fornecedor...';


GO
ALTER TABLE [dbo].[ProdutosDetalhe] DROP CONSTRAINT [FK_ProdutosDetalhe_Fornecedor];


GO
PRINT N'Dropping FK_Produtos_Fornecedor...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Fornecedor];


GO
PRINT N'Dropping FK_ImpostosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ImpostosMatching] DROP CONSTRAINT [FK_ImpostosMatching_Fornecedor];


GO
PRINT N'Dropping FK_MarcasMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[MarcasMatching] DROP CONSTRAINT [FK_MarcasMatching_Fornecedor];


GO
PRINT N'Dropping FK_ProdutosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ProdutosMatching] DROP CONSTRAINT [FK_ProdutosMatching_Fornecedor];


GO
PRINT N'Dropping FK_StocksMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[StocksMatching] DROP CONSTRAINT [FK_StocksMatching_Fornecedor];


GO
PRINT N'Dropping FK_Produtos_Imposto...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Imposto];


GO
PRINT N'Dropping FK_ImpostosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ImpostosMatching] DROP CONSTRAINT [FK_ImpostosMatching_MapTo];


GO
PRINT N'Dropping FK_Produtos_Marca...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Marca];


GO
PRINT N'Dropping FK_MarcasMatching_MapTo...';


GO
ALTER TABLE [dbo].[MarcasMatching] DROP CONSTRAINT [FK_MarcasMatching_MapTo];


GO
PRINT N'Dropping FK_Produtos_Stock...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Stock];


GO
PRINT N'Dropping FK_Produtos_Stock_U1...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Stock_U1];


GO
PRINT N'Dropping FK_Produtos_Stock_U2...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Stock_U2];


GO
PRINT N'Dropping FK_Produtos_Stock_U3...';


GO
ALTER TABLE [dbo].[Produtos] DROP CONSTRAINT [FK_Produtos_Stock_U3];


GO
PRINT N'Dropping FK_ProdutosDetalhe_Produto...';


GO
ALTER TABLE [dbo].[ProdutosDetalhe] DROP CONSTRAINT [FK_ProdutosDetalhe_Produto];


GO
PRINT N'Dropping FK_ProdutosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ProdutosMatching] DROP CONSTRAINT [FK_ProdutosMatching_MapTo];


GO
PRINT N'Dropping FK_ProdutosMatching_StockSubstituto...';


GO
ALTER TABLE [dbo].[ProdutosMatching] DROP CONSTRAINT [FK_ProdutosMatching_StockSubstituto];


GO
PRINT N'Dropping FK_StocksMatching_MapTo...';


GO
ALTER TABLE [dbo].[StocksMatching] DROP CONSTRAINT [FK_StocksMatching_MapTo];


GO
PRINT N'Dropping UC_CotacoesAvisos...';


GO
ALTER TABLE [dbo].[CotacoesAvisos] DROP CONSTRAINT [UC_CotacoesAvisos];


GO
PRINT N'Dropping [dbo].[CotacoesAtivasView].[CotacoesAtivasViewIndex]...';


GO
DROP INDEX [CotacoesAtivasViewIndex]
    ON [dbo].[CotacoesAtivasView];


GO
PRINT N'Removing schema binding from [dbo].[CotacoesAtivasView]...';


GO
ALTER VIEW [dbo].[CotacoesAtivasView]
AS
SELECT [FornecedorCodigo],
       [Data],
       [_ProdutoCodigo],
       [_ComplementoCodigo],
       [_ComplementoDescricao],
       [_Partnumber],
       [_MarcaCodigo],
       [_MarcaDescricao],
       [_CategoriaCodigo],
       [_CategoriaDescricao],
       [_StockCodigo],
       [_StockDescricao],
       [_ImpostoCodigo],
       [_ImpostoDescricao],
       [_EstadoCodigo],
       [_EstadoDescricao],
       [_Descricao],
       [_Link],
       [_Caracteristicas],
       [_Imagem],
       [_Preco],
       [_OutrosCustos],
       [_OutrosCustosDescricao],
       [ComplementoCodigo],
       [Partnumber],
       [MarcaCodigo],
       [CategoriaCodigo],
       [StockCodigo],
       [StockCodigoSubstituto],
       [StockCodigoSubstitutoJustificacao],
       CASE WHEN [StockCodigoSubstituto] IS NULL THEN [StockCodigo] ELSE [StockCodigoSubstituto] END AS [StockCodigoEfetivo],
       [ImpostoCodigo],
       [EstadoCodigo],
       [Descricao],
       [Link],
       [Caracteristicas],
       [Imagem],
       [PrecoCusto],
       [PrecoCustoFormula],
       [Validade],
       [ValidadeFormula],
       [ProdutoCodigo],
       [Completo],
       [Integrado],
       [Inativo],
       [Versao]
FROM   [dbo].[Cotacoes]
WHERE  [Inativo] = CAST ('false' AS BIT);


GO
PRINT N'Starting rebuilding table [dbo].[AvisosTipo]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AvisosTipo] (
    [Codigo]    NVARCHAR (5)   NOT NULL,
    [Descricao] NVARCHAR (128) NOT NULL,
    [Gravidade] SMALLINT       NOT NULL,
    [Notas]     NVARCHAR (256) NULL,
    [Icon]      NVARCHAR (20)  NULL,
    [Inativo]   BIT            NOT NULL,
    [Criacao]   SMALLDATETIME  NOT NULL,
    [Versao]    DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AvisosTipo] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AvisosTipo])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_AvisosTipo] ([Codigo], [Descricao], [Gravidade], [Notas], [Icon], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Descricao],
                 [Gravidade],
                 [Notas],
                 [Icon],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[AvisosTipo]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[AvisosTipo];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AvisosTipo]', N'AvisosTipo';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AvisosTipo]', N'PK_AvisosTipo', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[CategoriasMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CategoriasMatching] (
    [FornecedorCodigo] NVARCHAR (5)   NOT NULL,
    [Codigo]           NVARCHAR (128) NOT NULL,
    [Descricao]        NVARCHAR (128) NOT NULL,
    [MapTo]            NVARCHAR (20)  NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CategoriasMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CategoriasMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_CategoriasMatching] ([FornecedorCodigo], [Codigo], [Descricao], [MapTo], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[CategoriasMatching]
        ORDER BY [FornecedorCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[CategoriasMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CategoriasMatching]', N'CategoriasMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CategoriasMatching]', N'PK_CategoriasMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Complementos]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Complementos] (
    [Codigo]           NVARCHAR (5)   NOT NULL,
    [Descricao]        NVARCHAR (50)  NOT NULL,
    [TermoAcrescentar] NVARCHAR (50)  NULL,
    [TermosRemover]    NVARCHAR (100) NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Complementos] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Complementos])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Complementos] ([Codigo], [Descricao], [TermoAcrescentar], [TermosRemover], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Descricao],
                 [TermoAcrescentar],
                 [TermosRemover],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[Complementos]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[Complementos];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Complementos]', N'Complementos';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Complementos]', N'PK_Complementos', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ComplementosMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ComplementosMatching] (
    [FornecedorCodigo] NVARCHAR (5)   NOT NULL,
    [Codigo]           NVARCHAR (128) NOT NULL,
    [Descricao]        NVARCHAR (128) NOT NULL,
    [MapTo]            NVARCHAR (5)   NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ComplementosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ComplementosMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ComplementosMatching] ([FornecedorCodigo], [Codigo], [Descricao], [MapTo], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[ComplementosMatching]
        ORDER BY [FornecedorCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[ComplementosMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ComplementosMatching]', N'ComplementosMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ComplementosMatching]', N'PK_ComplementosMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Cotacoes]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Cotacoes] (
    [FornecedorCodigo]                  NVARCHAR (5)    NOT NULL,
    [Data]                              DATETIME        NOT NULL,
    [_ProdutoCodigo]                    NVARCHAR (256)  NOT NULL,
    [_ComplementoCodigo]                NVARCHAR (128)  NOT NULL,
    [_ComplementoDescricao]             NVARCHAR (128)  NOT NULL,
    [_Partnumber]                       NVARCHAR (25)   NOT NULL,
    [_MarcaCodigo]                      NVARCHAR (128)  NOT NULL,
    [_MarcaDescricao]                   NVARCHAR (128)  NOT NULL,
    [_CategoriaCodigo]                  NVARCHAR (128)  NOT NULL,
    [_CategoriaDescricao]               NVARCHAR (128)  NOT NULL,
    [_StockCodigo]                      NVARCHAR (128)  NOT NULL,
    [_StockDescricao]                   NVARCHAR (128)  NOT NULL,
    [_ImpostoCodigo]                    NVARCHAR (128)  NOT NULL,
    [_ImpostoDescricao]                 NVARCHAR (128)  NOT NULL,
    [_EstadoCodigo]                     NVARCHAR (128)  NOT NULL,
    [_EstadoDescricao]                  NVARCHAR (128)  NOT NULL,
    [_Descricao]                        NVARCHAR (256)  NOT NULL,
    [_Link]                             NVARCHAR (1024) NOT NULL,
    [_Caracteristicas]                  NVARCHAR (2048) NOT NULL,
    [_Imagem]                           NVARCHAR (1024) NOT NULL,
    [_Preco]                            DECIMAL (14, 4) NOT NULL,
    [_OutrosCustos]                     DECIMAL (14, 4) NOT NULL,
    [_OutrosCustosDescricao]            NVARCHAR (128)  NOT NULL,
    [ComplementoCodigo]                 NVARCHAR (5)    NULL,
    [Partnumber]                        NVARCHAR (25)   NULL,
    [MarcaCodigo]                       NVARCHAR (5)    NULL,
    [CategoriaCodigo]                   NVARCHAR (20)   NULL,
    [StockCodigo]                       NVARCHAR (5)    NULL,
    [StockCodigoSubstituto]             NVARCHAR (5)    NULL,
    [StockCodigoSubstitutoJustificacao] NVARCHAR (256)  NULL,
    [ImpostoCodigo]                     NVARCHAR (5)    NULL,
    [EstadoCodigo]                      NVARCHAR (5)    NULL,
    [Descricao]                         NVARCHAR (256)  NULL,
    [Link]                              NVARCHAR (1024) NULL,
    [Caracteristicas]                   NVARCHAR (2048) NULL,
    [Imagem]                            NVARCHAR (1024) NULL,
    [PrecoCusto]                        DECIMAL (14, 4) NULL,
    [PrecoCustoFormula]                 NVARCHAR (256)  NULL,
    [Validade]                          SMALLDATETIME   NULL,
    [ValidadeFormula]                   NVARCHAR (256)  NULL,
    [ProdutoCodigo]                     NVARCHAR (40)   NULL,
    [Completo]                          BIT             NOT NULL,
    [Integrado]                         BIT             NOT NULL,
    [Inativo]                           BIT             NOT NULL,
    [Versao]                            DATETIME        NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Cotacoes] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Data] ASC, [_ProdutoCodigo] ASC, [_ComplementoCodigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Cotacoes])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Cotacoes] ([FornecedorCodigo], [Data], [_ProdutoCodigo], [_ComplementoCodigo], [_ComplementoDescricao], [_Partnumber], [_MarcaCodigo], [_MarcaDescricao], [_CategoriaCodigo], [_CategoriaDescricao], [_StockCodigo], [_StockDescricao], [_ImpostoCodigo], [_ImpostoDescricao], [_EstadoCodigo], [_EstadoDescricao], [_Descricao], [_Link], [_Caracteristicas], [_Imagem], [_Preco], [_OutrosCustos], [_OutrosCustosDescricao], [ComplementoCodigo], [Partnumber], [MarcaCodigo], [CategoriaCodigo], [StockCodigo], [StockCodigoSubstituto], [StockCodigoSubstitutoJustificacao], [ImpostoCodigo], [EstadoCodigo], [Descricao], [Link], [Caracteristicas], [Imagem], [PrecoCusto], [PrecoCustoFormula], [Validade], [ValidadeFormula], [ProdutoCodigo], [Completo], [Integrado], [Inativo], [Versao])
        SELECT   [FornecedorCodigo],
                 [Data],
                 [_ProdutoCodigo],
                 [_ComplementoCodigo],
                 [_ComplementoDescricao],
                 [_Partnumber],
                 [_MarcaCodigo],
                 [_MarcaDescricao],
                 [_CategoriaCodigo],
                 [_CategoriaDescricao],
                 [_StockCodigo],
                 [_StockDescricao],
                 [_ImpostoCodigo],
                 [_ImpostoDescricao],
                 [_EstadoCodigo],
                 [_EstadoDescricao],
                 [_Descricao],
                 [_Link],
                 [_Caracteristicas],
                 [_Imagem],
                 [_Preco],
                 [_OutrosCustos],
                 [_OutrosCustosDescricao],
                 [ComplementoCodigo],
                 [Partnumber],
                 [MarcaCodigo],
                 [CategoriaCodigo],
                 [StockCodigo],
                 [StockCodigoSubstituto],
                 [StockCodigoSubstitutoJustificacao],
                 [ImpostoCodigo],
                 [EstadoCodigo],
                 [Descricao],
                 [Link],
                 [Caracteristicas],
                 [Imagem],
                 [PrecoCusto],
                 [PrecoCustoFormula],
                 [Validade],
                 [ValidadeFormula],
                 [ProdutoCodigo],
                 [Completo],
                 [Integrado],
                 [Inativo],
                 [Versao]
        FROM     [dbo].[Cotacoes]
        ORDER BY [FornecedorCodigo] ASC, [Data] ASC, [_ProdutoCodigo] ASC, [_ComplementoCodigo] ASC;
    END

DROP TABLE [dbo].[Cotacoes];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Cotacoes]', N'Cotacoes';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Cotacoes]', N'PK_Cotacoes', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[CotacoesAvisos]...';


GO
ALTER TABLE [dbo].[CotacoesAvisos] ALTER COLUMN [AvisoTipoCodigo] NVARCHAR (5) NOT NULL;

ALTER TABLE [dbo].[CotacoesAvisos] ALTER COLUMN [FornecedorCodigo] NVARCHAR (5) NOT NULL;


GO
PRINT N'Creating UC_CotacoesAvisos...';


GO
ALTER TABLE [dbo].[CotacoesAvisos]
    ADD CONSTRAINT [UC_CotacoesAvisos] UNIQUE NONCLUSTERED ([FornecedorCodigo] ASC, [Data] ASC, [_ProdutoCodigo] ASC, [_ComplementoCodigo] ASC, [AvisoTipoCodigo] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CotacoesRegras]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CotacoesRegras] (
    [FornecedorCodigo]      NVARCHAR (5)   NOT NULL,
    [MarcaCodigo]           NVARCHAR (5)   NOT NULL,
    [CategoriaCodigo]       NVARCHAR (20)  NOT NULL,
    [StockCodigo]           NVARCHAR (5)   NOT NULL,
    [HorasValidade]         SMALLINT       NOT NULL,
    [StockCodigoSubstituto] NVARCHAR (5)   NULL,
    [DataReset]             SMALLDATETIME  NOT NULL,
    [Notas]                 NVARCHAR (256) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CotacoesRegras] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [MarcaCodigo] ASC, [CategoriaCodigo] ASC, [StockCodigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CotacoesRegras])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_CotacoesRegras] ([FornecedorCodigo], [MarcaCodigo], [CategoriaCodigo], [StockCodigo], [HorasValidade], [StockCodigoSubstituto], [DataReset], [Notas])
        SELECT   [FornecedorCodigo],
                 [MarcaCodigo],
                 [CategoriaCodigo],
                 [StockCodigo],
                 [HorasValidade],
                 [StockCodigoSubstituto],
                 [DataReset],
                 [Notas]
        FROM     [dbo].[CotacoesRegras]
        ORDER BY [FornecedorCodigo] ASC, [MarcaCodigo] ASC, [CategoriaCodigo] ASC, [StockCodigo] ASC;
    END

DROP TABLE [dbo].[CotacoesRegras];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CotacoesRegras]', N'CotacoesRegras';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CotacoesRegras]', N'PK_CotacoesRegras', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Estados]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Estados] (
    [Codigo]    NVARCHAR (5)  NOT NULL,
    [Descricao] NVARCHAR (50) NOT NULL,
    [Inativo]   BIT           NOT NULL,
    [Criacao]   SMALLDATETIME NOT NULL,
    [Versao]    DATETIME      NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Estados] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Estados])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Estados] ([Codigo], [Descricao], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Descricao],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[Estados]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[Estados];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Estados]', N'Estados';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Estados]', N'PK_Estados', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EstadosMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EstadosMatching] (
    [FornecedorCodigo] NVARCHAR (5)   NOT NULL,
    [Codigo]           NVARCHAR (128) NOT NULL,
    [Descricao]        NVARCHAR (128) NOT NULL,
    [MapTo]            NVARCHAR (5)   NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EstadosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EstadosMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_EstadosMatching] ([FornecedorCodigo], [Codigo], [Descricao], [MapTo], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[EstadosMatching]
        ORDER BY [FornecedorCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[EstadosMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EstadosMatching]', N'EstadosMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EstadosMatching]', N'PK_EstadosMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Fornecedores]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Fornecedores] (
    [Codigo]                               NVARCHAR (5)   NOT NULL,
    [Nome]                                 NVARCHAR (50)  NOT NULL,
    [Morada]                               NVARCHAR (200) NOT NULL,
    [CodigoPostal]                         NVARCHAR (15)  NOT NULL,
    [LocalidadePostal]                     NVARCHAR (50)  NOT NULL,
    [Contribuinte]                         NVARCHAR (20)  NOT NULL,
    [Vendedor]                             NVARCHAR (50)  NULL,
    [Telefone]                             NVARCHAR (20)  NULL,
    [Telemovel]                            NVARCHAR (15)  NOT NULL,
    [SMS]                                  NVARCHAR (15)  NOT NULL,
    [Email]                                NVARCHAR (100) NOT NULL,
    [AcessoOnlineAtivo]                    BIT            NOT NULL,
    [Username]                             NVARCHAR (20)  NOT NULL,
    [Password]                             NVARCHAR (20)  NOT NULL,
    [HorasValidadeSugestao]                SMALLINT       NOT NULL,
    [ProdutosMatchingAutomatico]           BIT            NOT NULL,
    [ProdutosCriacaoAutomatica]            BIT            NOT NULL,
    [DisponibilizaInfoProdutoDetalhe]      BIT            NOT NULL,
    [DescricaoPontuacaoInicial]            SMALLINT       NOT NULL,
    [CaracteristicasPontuacaoInicial]      SMALLINT       NOT NULL,
    [LinkPontuacaoInicial]                 SMALLINT       NOT NULL,
    [ImagemPontuacaoInicial]               SMALLINT       NOT NULL,
    [DescricaoSugereInativo]               BIT            NOT NULL,
    [CaracteristicasSugereInativo]         BIT            NOT NULL,
    [LinkSugereInativo]                    BIT            NOT NULL,
    [ImagemSugereInativo]                  BIT            NOT NULL,
    [AtualizacaoAutomaticaInativaSugestao] BIT            NOT NULL,
    [ProdutosConfiancaPreco]               FLOAT (53)     NOT NULL,
    [ProdutosConfiancaDisponibilidade]     FLOAT (53)     NOT NULL,
    [Inativo]                              BIT            NOT NULL,
    [Criacao]                              SMALLDATETIME  NOT NULL,
    [Versao]                               DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Fornecedores] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Fornecedores])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Fornecedores] ([Codigo], [Nome], [Morada], [CodigoPostal], [LocalidadePostal], [Contribuinte], [Vendedor], [Telefone], [Telemovel], [SMS], [Email], [AcessoOnlineAtivo], [Username], [Password], [HorasValidadeSugestao], [ProdutosMatchingAutomatico], [ProdutosCriacaoAutomatica], [DisponibilizaInfoProdutoDetalhe], [DescricaoPontuacaoInicial], [CaracteristicasPontuacaoInicial], [LinkPontuacaoInicial], [ImagemPontuacaoInicial], [DescricaoSugereInativo], [CaracteristicasSugereInativo], [LinkSugereInativo], [ImagemSugereInativo], [AtualizacaoAutomaticaInativaSugestao], [ProdutosConfiancaPreco], [ProdutosConfiancaDisponibilidade], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Nome],
                 [Morada],
                 [CodigoPostal],
                 [LocalidadePostal],
                 [Contribuinte],
                 [Vendedor],
                 [Telefone],
                 [Telemovel],
                 [SMS],
                 [Email],
                 [AcessoOnlineAtivo],
                 [Username],
                 [Password],
                 [HorasValidadeSugestao],
                 [ProdutosMatchingAutomatico],
                 [ProdutosCriacaoAutomatica],
                 [DisponibilizaInfoProdutoDetalhe],
                 [DescricaoPontuacaoInicial],
                 [CaracteristicasPontuacaoInicial],
                 [LinkPontuacaoInicial],
                 [ImagemPontuacaoInicial],
                 [DescricaoSugereInativo],
                 [CaracteristicasSugereInativo],
                 [LinkSugereInativo],
                 [ImagemSugereInativo],
                 [AtualizacaoAutomaticaInativaSugestao],
                 [ProdutosConfiancaPreco],
                 [ProdutosConfiancaDisponibilidade],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[Fornecedores]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[Fornecedores];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Fornecedores]', N'Fornecedores';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Fornecedores]', N'PK_Fornecedores', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Impostos]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Impostos] (
    [Codigo]           NVARCHAR (5)  NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [DesignacaoFiscal] NVARCHAR (50) NOT NULL,
    [Taxa]             FLOAT (53)    NOT NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Impostos] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Impostos])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Impostos] ([Codigo], [Descricao], [DesignacaoFiscal], [Taxa], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Descricao],
                 [DesignacaoFiscal],
                 [Taxa],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[Impostos]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[Impostos];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Impostos]', N'Impostos';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Impostos]', N'PK_Impostos', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ImpostosMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImpostosMatching] (
    [FornecedorCodigo] NVARCHAR (5)   NOT NULL,
    [Codigo]           NVARCHAR (128) NOT NULL,
    [Descricao]        NVARCHAR (128) NOT NULL,
    [MapTo]            NVARCHAR (5)   NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImpostosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImpostosMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ImpostosMatching] ([FornecedorCodigo], [Codigo], [Descricao], [MapTo], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[ImpostosMatching]
        ORDER BY [FornecedorCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[ImpostosMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImpostosMatching]', N'ImpostosMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImpostosMatching]', N'PK_ImpostosMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Marcas]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Marcas] (
    [Codigo]    NVARCHAR (5)  NOT NULL,
    [Descricao] NVARCHAR (50) NOT NULL,
    [Inativo]   BIT           NOT NULL,
    [Criacao]   SMALLDATETIME NOT NULL,
    [Versao]    DATETIME      NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Marcas] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Marcas])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Marcas] ([Codigo], [Descricao], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Descricao],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[Marcas]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[Marcas];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Marcas]', N'Marcas';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Marcas]', N'PK_Marcas', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[MarcasMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MarcasMatching] (
    [FornecedorCodigo] NVARCHAR (5)   NOT NULL,
    [Codigo]           NVARCHAR (128) NOT NULL,
    [Descricao]        NVARCHAR (128) NOT NULL,
    [MapTo]            NVARCHAR (5)   NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_MarcasMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MarcasMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_MarcasMatching] ([FornecedorCodigo], [Codigo], [Descricao], [MapTo], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[MarcasMatching]
        ORDER BY [FornecedorCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[MarcasMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MarcasMatching]', N'MarcasMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_MarcasMatching]', N'PK_MarcasMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Produtos]...';


GO
ALTER TABLE [dbo].[Produtos] ALTER COLUMN [FornecedorCodigo] NVARCHAR (5) NOT NULL;

ALTER TABLE [dbo].[Produtos] ALTER COLUMN [ImpostoCodigo] NVARCHAR (5) NOT NULL;

ALTER TABLE [dbo].[Produtos] ALTER COLUMN [MarcaCodigo] NVARCHAR (5) NOT NULL;

ALTER TABLE [dbo].[Produtos] ALTER COLUMN [StockCodigo] NVARCHAR (5) NULL;

ALTER TABLE [dbo].[Produtos] ALTER COLUMN [StockCodigo_U1] NVARCHAR (5) NULL;

ALTER TABLE [dbo].[Produtos] ALTER COLUMN [StockCodigo_U2] NVARCHAR (5) NULL;

ALTER TABLE [dbo].[Produtos] ALTER COLUMN [StockCodigo_U3] NVARCHAR (5) NULL;


GO
PRINT N'Starting rebuilding table [dbo].[ProdutosDetalhe]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ProdutosDetalhe] (
    [ProdutoCodigo]                NVARCHAR (40)   NOT NULL,
    [FornecedorCodigo]             NVARCHAR (5)    NOT NULL,
    [Descricao]                    NVARCHAR (256)  NOT NULL,
    [DescricaoPontuacao]           SMALLINT        NOT NULL,
    [DescricaoInativa]             BIT             NOT NULL,
    [Caracteristicas]              NVARCHAR (2048) NOT NULL,
    [CaracteristicasPontuacao]     SMALLINT        NOT NULL,
    [CaracteristicasInativas]      BIT             NOT NULL,
    [Link]                         NVARCHAR (1024) NOT NULL,
    [LinkPontuacao]                SMALLINT        NOT NULL,
    [LinkInativo]                  BIT             NOT NULL,
    [Imagem]                       NVARCHAR (1024) NOT NULL,
    [ImagemPontuacao]              SMALLINT        NOT NULL,
    [ImagemInativa]                BIT             NOT NULL,
    [AtualizacaoAutomaticaInativa] BIT             NOT NULL,
    [AtualizacaoManualNecessaria]  BIT             NOT NULL,
    [IndicePreocupacaoConteudo]    TINYINT         NOT NULL,
    [Criacao]                      SMALLDATETIME   NOT NULL,
    [Versao]                       DATETIME        NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ProdutosDetalhe] PRIMARY KEY CLUSTERED ([ProdutoCodigo] ASC, [FornecedorCodigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ProdutosDetalhe])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ProdutosDetalhe] ([ProdutoCodigo], [FornecedorCodigo], [Descricao], [DescricaoPontuacao], [DescricaoInativa], [Caracteristicas], [CaracteristicasPontuacao], [CaracteristicasInativas], [Link], [LinkPontuacao], [LinkInativo], [Imagem], [ImagemPontuacao], [ImagemInativa], [AtualizacaoAutomaticaInativa], [AtualizacaoManualNecessaria], [IndicePreocupacaoConteudo], [Criacao], [Versao])
        SELECT   [ProdutoCodigo],
                 [FornecedorCodigo],
                 [Descricao],
                 [DescricaoPontuacao],
                 [DescricaoInativa],
                 [Caracteristicas],
                 [CaracteristicasPontuacao],
                 [CaracteristicasInativas],
                 [Link],
                 [LinkPontuacao],
                 [LinkInativo],
                 [Imagem],
                 [ImagemPontuacao],
                 [ImagemInativa],
                 [AtualizacaoAutomaticaInativa],
                 [AtualizacaoManualNecessaria],
                 [IndicePreocupacaoConteudo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[ProdutosDetalhe]
        ORDER BY [ProdutoCodigo] ASC, [FornecedorCodigo] ASC;
    END

DROP TABLE [dbo].[ProdutosDetalhe];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ProdutosDetalhe]', N'ProdutosDetalhe';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ProdutosDetalhe]', N'PK_ProdutosDetalhe', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ProdutosMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ProdutosMatching] (
    [FornecedorCodigo]                  NVARCHAR (5)   NOT NULL,
    [ComplementoCodigo]                 NVARCHAR (128) NOT NULL,
    [Codigo]                            NVARCHAR (256) NOT NULL,
    [Descricao]                         NVARCHAR (256) NOT NULL,
    [MapTo]                             NVARCHAR (40)  NULL,
    [HorasValidadeCotacao]              SMALLINT       NULL,
    [StockCodigoSubstituto]             NVARCHAR (5)   NULL,
    [DispensaPrevencaoPrecosDesfazados] BIT            NULL,
    [DataReset]                         SMALLDATETIME  NULL,
    [Notas]                             NVARCHAR (256) NULL,
    [Inativo]                           BIT            NOT NULL,
    [Criacao]                           SMALLDATETIME  NOT NULL,
    [Versao]                            DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ProdutosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [ComplementoCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ProdutosMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ProdutosMatching] ([FornecedorCodigo], [ComplementoCodigo], [Codigo], [Descricao], [MapTo], [HorasValidadeCotacao], [StockCodigoSubstituto], [DispensaPrevencaoPrecosDesfazados], [DataReset], [Notas], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [ComplementoCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [HorasValidadeCotacao],
                 [StockCodigoSubstituto],
                 [DispensaPrevencaoPrecosDesfazados],
                 [DataReset],
                 [Notas],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[ProdutosMatching]
        ORDER BY [FornecedorCodigo] ASC, [ComplementoCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[ProdutosMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ProdutosMatching]', N'ProdutosMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ProdutosMatching]', N'PK_ProdutosMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Stocks]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Stocks] (
    [Codigo]               NVARCHAR (5)   NOT NULL,
    [Descricao]            NVARCHAR (50)  NOT NULL,
    [DisponibilidadeNivel] SMALLINT       NOT NULL,
    [Notas]                NVARCHAR (256) NULL,
    [Inativo]              BIT            NOT NULL,
    [Criacao]              SMALLDATETIME  NOT NULL,
    [Versao]               DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Stocks] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Stocks])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Stocks] ([Codigo], [Descricao], [DisponibilidadeNivel], [Notas], [Inativo], [Criacao], [Versao])
        SELECT   [Codigo],
                 [Descricao],
                 [DisponibilidadeNivel],
                 [Notas],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[Stocks]
        ORDER BY [Codigo] ASC;
    END

DROP TABLE [dbo].[Stocks];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Stocks]', N'Stocks';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Stocks]', N'PK_Stocks', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[StocksMatching]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StocksMatching] (
    [FornecedorCodigo] NVARCHAR (5)   NOT NULL,
    [Codigo]           NVARCHAR (128) NOT NULL,
    [Descricao]        NVARCHAR (128) NOT NULL,
    [MapTo]            NVARCHAR (5)   NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_StocksMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StocksMatching])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_StocksMatching] ([FornecedorCodigo], [Codigo], [Descricao], [MapTo], [Inativo], [Criacao], [Versao])
        SELECT   [FornecedorCodigo],
                 [Codigo],
                 [Descricao],
                 [MapTo],
                 [Inativo],
                 [Criacao],
                 [Versao]
        FROM     [dbo].[StocksMatching]
        ORDER BY [FornecedorCodigo] ASC, [Codigo] ASC;
    END

DROP TABLE [dbo].[StocksMatching];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StocksMatching]', N'StocksMatching';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_StocksMatching]', N'PK_StocksMatching', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating FK_CotacoesAvisos_AvisoTipo...';


GO
ALTER TABLE [dbo].[CotacoesAvisos] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesAvisos_AvisoTipo] FOREIGN KEY ([AvisoTipoCodigo]) REFERENCES [dbo].[AvisosTipo] ([Codigo]);


GO
PRINT N'Creating FK_CategoriasMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[CategoriasMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_CategoriasMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CategoriasMatching_MapTo...';


GO
ALTER TABLE [dbo].[CategoriasMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_CategoriasMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_ComplementosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ComplementosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ComplementosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Complementos] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Complemento...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Complemento] FOREIGN KEY ([ComplementoCodigo]) REFERENCES [dbo].[Complementos] ([Codigo]);


GO
PRINT N'Creating FK_ComplementosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ComplementosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ComplementosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Marca...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Categoria...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Categoria] FOREIGN KEY ([CategoriaCodigo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Stock...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_StockSubstituto...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Imposto...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Imposto] FOREIGN KEY ([ImpostoCodigo]) REFERENCES [dbo].[Impostos] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Produto...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Produto] FOREIGN KEY ([ProdutoCodigo]) REFERENCES [dbo].[Produtos] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Fornecedor...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Estado...';


GO
ALTER TABLE [dbo].[Cotacoes] WITH NOCHECK
    ADD CONSTRAINT [FK_Cotacoes_Estado] FOREIGN KEY ([EstadoCodigo]) REFERENCES [dbo].[Estados] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesAvisos_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesAvisos] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesAvisos_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Marca...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Categoria...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Categoria] FOREIGN KEY ([CategoriaCodigo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Stock...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_StockSubstituto...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_EstadosMatching_MapTo...';


GO
ALTER TABLE [dbo].[EstadosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_EstadosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Estados] ([Codigo]);


GO
PRINT N'Creating FK_EstadosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[EstadosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_EstadosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosDetalhe_Fornecedor...';


GO
ALTER TABLE [dbo].[ProdutosDetalhe] WITH NOCHECK
    ADD CONSTRAINT [FK_ProdutosDetalhe_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Fornecedor...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ImpostosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ImpostosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ImpostosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_MarcasMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[MarcasMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_MarcasMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ProdutosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ProdutosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_StocksMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[StocksMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_StocksMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Imposto...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Imposto] FOREIGN KEY ([ImpostoCodigo]) REFERENCES [dbo].[Impostos] ([Codigo]);


GO
PRINT N'Creating FK_ImpostosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ImpostosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ImpostosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Impostos] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Marca...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_MarcasMatching_MapTo...';


GO
ALTER TABLE [dbo].[MarcasMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_MarcasMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock_U1...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Stock_U1] FOREIGN KEY ([StockCodigo_U1]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock_U2...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Stock_U2] FOREIGN KEY ([StockCodigo_U2]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock_U3...';


GO
ALTER TABLE [dbo].[Produtos] WITH NOCHECK
    ADD CONSTRAINT [FK_Produtos_Stock_U3] FOREIGN KEY ([StockCodigo_U3]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosDetalhe_Produto...';


GO
ALTER TABLE [dbo].[ProdutosDetalhe] WITH NOCHECK
    ADD CONSTRAINT [FK_ProdutosDetalhe_Produto] FOREIGN KEY ([ProdutoCodigo]) REFERENCES [dbo].[Produtos] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ProdutosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ProdutosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Produtos] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosMatching_StockSubstituto...';


GO
ALTER TABLE [dbo].[ProdutosMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_ProdutosMatching_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_StocksMatching_MapTo...';


GO
ALTER TABLE [dbo].[StocksMatching] WITH NOCHECK
    ADD CONSTRAINT [FK_StocksMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Adding schema binding to [dbo].[CotacoesAtivasView]...';


GO
/*
	NOTA:
	Esta view materializada, representa todas as cotações inativas = 'false'
		> Incompletas
		> Completas
		> Integradas

	- A view é materializada atendendo ao facto de poder representar um enorme volume de informação
*/


ALTER VIEW [dbo].[CotacoesAtivasView] WITH SchemaBinding -- todos os campos têm que ser especificados pelo facto de ser uma view materializada
	AS 
	SELECT [FornecedorCodigo], [Data], [_ProdutoCodigo], [_ComplementoCodigo], [_ComplementoDescricao],
	       [_Partnumber], [_MarcaCodigo], [_MarcaDescricao], [_CategoriaCodigo], [_CategoriaDescricao], [_StockCodigo], [_StockDescricao],
		   [_ImpostoCodigo], [_ImpostoDescricao], [_EstadoCodigo], [_EstadoDescricao], [_Descricao], [_Link], [_Caracteristicas], [_Imagem], [_Preco], [_OutrosCustos], [_OutrosCustosDescricao],
		   [ComplementoCodigo], [Partnumber], [MarcaCodigo], [CategoriaCodigo], 
		   [StockCodigo], [StockCodigoSubstituto], [StockCodigoSubstitutoJustificacao], 
		   CASE WHEN [StockCodigoSubstituto] IS NULL THEN [StockCodigo] ELSE [StockCodigoSubstituto] END AS [StockCodigoEfetivo],
		   [ImpostoCodigo], [EstadoCodigo], [Descricao], [Link], [Caracteristicas], [Imagem], [PrecoCusto], [PrecoCustoFormula],
		   [Validade], [ValidadeFormula], [ProdutoCodigo], 
		   [Completo], [Integrado],
		   [Inativo], [Versao]
	
	FROM [dbo].[Cotacoes]
	WHERE [Inativo] = CAST('false' as bit);


-- O indice que torna esta view materializada chama-se IDX_CotacoesAtivas.
GO
PRINT N'Creating [dbo].[CotacoesAtivasView].[CotacoesAtivasViewIndex]...';


GO
CREATE UNIQUE CLUSTERED INDEX [CotacoesAtivasViewIndex]
    ON [dbo].[CotacoesAtivasView]([FornecedorCodigo] ASC, [Data] ASC, [_ProdutoCodigo] ASC, [_ComplementoCodigo] ASC);


GO
PRINT N'Refreshing [dbo].[CotacoesAtuaisView]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CotacoesAtuaisView]';


GO
PRINT N'Refreshing [dbo].[CotacoesIncompletasView]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CotacoesIncompletasView]';


GO
PRINT N'Refreshing [dbo].[CotacoesNaoIntegradasView]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CotacoesNaoIntegradasView]';


GO
PRINT N'Refreshing [dbo].[Step2b1a_Mappings_Categories_FeedNewRules]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1a_Mappings_Categories_FeedNewRules]';


GO
PRINT N'Refreshing [dbo].[Step2b1b_Mappings_Categories_Map]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1b_Mappings_Categories_Map]';


GO
PRINT N'Refreshing [dbo].[Step2b1c_Mappings_Categories_Notifications]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1c_Mappings_Categories_Notifications]';


GO
PRINT N'Refreshing [dbo].[Step2b1a_Mappings_Addons_FeedNewRules]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1a_Mappings_Addons_FeedNewRules]';


GO
PRINT N'Refreshing [dbo].[Step2b1b_Mappings_Addons_Map]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1b_Mappings_Addons_Map]';


GO
PRINT N'Refreshing [dbo].[Step2b1c_Mappings_Addons_Notifications]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1c_Mappings_Addons_Notifications]';


GO
PRINT N'Refreshing [dbo].[CotacaoInsertSP]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CotacaoInsertSP]';


GO
PRINT N'Refreshing [dbo].[Step2a2_DeleteExpiredQuotations]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2a2_DeleteExpiredQuotations]';


GO
PRINT N'Refreshing [dbo].[Step2a3_SetInactiveExpiredQuotations]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2a3_SetInactiveExpiredQuotations]';


GO
PRINT N'Refreshing [dbo].[DeleteIncompleteExistingQuotations]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[DeleteIncompleteExistingQuotations]';


GO
PRINT N'Refreshing [dbo].[Step2b1a_Mappings_Brands_FeedNewRules]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1a_Mappings_Brands_FeedNewRules]';


GO
PRINT N'Refreshing [dbo].[Step2b1a_Mappings_Statuses_FeedNewRules]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1a_Mappings_Statuses_FeedNewRules]';


GO
PRINT N'Refreshing [dbo].[Step2b1a_Mappings_Stocks_FeedNewRules]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1a_Mappings_Stocks_FeedNewRules]';


GO
PRINT N'Refreshing [dbo].[Step2b1a_Mappings_Taxes_FeedNewRules]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1a_Mappings_Taxes_FeedNewRules]';


GO
PRINT N'Refreshing [dbo].[Step2b1b_Mappings_Brands_Map]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1b_Mappings_Brands_Map]';


GO
PRINT N'Refreshing [dbo].[Step2b1b_Mappings_Statuses_Map]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1b_Mappings_Statuses_Map]';


GO
PRINT N'Refreshing [dbo].[Step2b1b_Mappings_Stocks_Map]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1b_Mappings_Stocks_Map]';


GO
PRINT N'Refreshing [dbo].[Step2b1b_Mappings_Taxes_Map]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1b_Mappings_Taxes_Map]';


GO
PRINT N'Refreshing [dbo].[Step2b1c_Mappings_Brands_Notifications]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1c_Mappings_Brands_Notifications]';


GO
PRINT N'Refreshing [dbo].[Step2b1c_Mappings_Statuses_Notifications]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1c_Mappings_Statuses_Notifications]';


GO
PRINT N'Refreshing [dbo].[Step2b1c_Mappings_Stocks_Notifications]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1c_Mappings_Stocks_Notifications]';


GO
PRINT N'Refreshing [dbo].[Step2b1c_Mappings_Taxes_Notifications]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2b1c_Mappings_Taxes_Notifications]';


GO
PRINT N'Refreshing [dbo].[Step2a1_CleanAllExistingWarnings]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Step2a1_CleanAllExistingWarnings]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


/* IMPOSTOS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Impostos])
BEGIN	
	INSERT INTO [dbo].[Impostos] ([Codigo], [Descricao], [DesignacaoFiscal], [Taxa], [Inativo], [Criacao], [Versao])
		VALUES ('IVA.PTC.N23', 'IVA PT Continental - Taxa Normal de 23%', 'IVA PT.Continental 23%', 23.00, CAST('false' AS bit), GETDATE(), GETDATE())
END


/* COMPLEMENTOS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Complementos])
BEGIN	
	INSERT INTO [dbo].[Complementos] ([Codigo], [Descricao], [TermoAcrescentar], [TermosRemover], [Inativo], [Criacao], [Versao])
		VALUES ('N/A', 'Não aplicável', NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE())
END


/* AVISOSTIPO */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[AvisosTipo])
BEGIN	
	INSERT INTO [dbo].[AvisosTipo] ([Codigo], [Descricao], [Gravidade], [Notas], [Icon], [Inativo], [Criacao], [Versao])
		 VALUES ('PFS', 'Prevenção Falso Stock', 3, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('IAPD', 'Inativação Administrativa (Prevenção Preço Desfazado)', 7, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CICM0', 'Cotação Incompleta [Complemento] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CICM1', 'Cotação Incompleta [Complemento] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIMM0', 'Cotação Incompleta [Marca] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIMM1', 'Cotação Incompleta [Marca] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CITM0', 'Cotação Incompleta [Categoria] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CITM1', 'Cotação Incompleta [Categoria] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CISM0', 'Cotação Incompleta [Stock] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CISM1', 'Cotação Incompleta [Stock] (mapeamento inativo)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIIM0', 'Cotação Incompleta [Imposto] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIIM1', 'Cotação Incompleta [Imposto] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIDM0', 'Cotação Incompleta [Estado] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIDM1', 'Cotação Incompleta [Estado] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM0', 'Cotação Incompleta [Produto] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM1', 'Cotação Incompleta [Produto] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM2', 'Cotação Incompleta [Produto] (fornecedor configurado para não criar automaticamente fichas de produtos)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM3', 'Cotação Incompleta [Produto] (fornecedor configurado para não mapear automaticamente produtos)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM4', 'Cotação Incompleta [Produto] (produto inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM9', 'Cotação Incompleta [Produto] (ambiguidade detetada com outro partnumber de outra marca)', 8, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE())

END



/* STOCKS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Stocks])
BEGIN	
	INSERT INTO [dbo].[Stocks] ([Codigo], [Descricao], [DisponibilidadeNivel], [Notas], [Inativo], [Criacao], [Versao])
		 VALUES ('D-5','Indisponivel permanentemente', -5, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-4','Indisponivel sob encomenda (dias entrega: +40)', -4, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-3','Indisponivel sob encomenda (dias entrega: +25)', -3, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-2','Indisponivel sob encomenda (dias entrega: +10)', -2, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-1','Indisponivel sob encomenda (dias entrega: +6)', -1, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+0','Indisponivel momentaneamente (dias entrega: +2)', 0, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+1','Disponivel, stock reduzido', 1, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+2','Disponivel, stock limitado', 2, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+3','Disponivel, stock normal', 3, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+4','Disponivel, stock abundante', 4, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+5','Disponivel permanentemente', 5, NULL, CAST('false' AS bit), GETDATE(), GETDATE())
END




/* FORNECEDORES */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Fornecedores])
BEGIN	
	INSERT INTO [dbo].[Fornecedores]
			   ([Codigo], [Nome], [Morada], [CodigoPostal], [LocalidadePostal], [Contribuinte], 
				[Vendedor], [Telefone], [Telemovel], [SMS], [Email], [AcessoOnlineAtivo], [Username], [Password],
				[HorasValidadeSugestao], [ProdutosMatchingAutomatico], [ProdutosCriacaoAutomatica], [DisponibilizaInfoProdutoDetalhe],
				[DescricaoPontuacaoInicial], [CaracteristicasPontuacaoInicial], [LinkPontuacaoInicial], [ImagemPontuacaoInicial],
				[DescricaoSugereInativo], [CaracteristicasSugereInativo], [LinkSugereInativo], [ImagemSugereInativo],
				[AtualizacaoAutomaticaInativaSugestao], [ProdutosConfiancaPreco], [ProdutosConfiancaDisponibilidade],
				[Inativo], [Criacao], [Versao])
		 VALUES
			   ('00024', 'CPC - Companhia Portuguesa de Computadores...', 'Rua Monte dos Pipos, 649', '4460-059', 'Guifões', '999999990',
				'Susana', '222333444', '939949959', '969979989', 'susana@cpcdi.pt', CAST('false' AS bit), 'cpc001', 'cpcpass',
				24, CAST('true' AS bit), CAST('true' AS bit), CAST('true' AS bit),
				5, 5, 5, 5,
				CAST('false' AS bit), CAST('false' AS bit), CAST('false' AS bit), CAST('false' AS bit),
				CAST('false' AS bit), 90, 90,
				CAST('false' AS bit), GETDATE(), GETDATE())
END



/* ESTADOS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Estados])
BEGIN	
	INSERT INTO [dbo].[Estados] ([Codigo], [Descricao], [Inativo], [Criacao], [Versao])
		VALUES ('NOVO', 'Produto novo (nunca usado)', CAST('false' AS bit), GETDATE(), GETDATE()),
			   ('PROMO', 'Produto em promoção', CAST('false' AS bit), GETDATE(), GETDATE()),
			   ('USADO', 'Produto usado', CAST('false' AS bit), GETDATE(), GETDATE()),
			   ('OPORT', 'Oportunidade', CAST('false' AS bit), GETDATE(), GETDATE()),
			   ('GOPOR', 'Grande oportunidade', CAST('false' AS bit), GETDATE(), GETDATE())
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[CotacoesAvisos] WITH CHECK CHECK CONSTRAINT [FK_CotacoesAvisos_AvisoTipo];

ALTER TABLE [dbo].[CategoriasMatching] WITH CHECK CHECK CONSTRAINT [FK_CategoriasMatching_Fornecedor];

ALTER TABLE [dbo].[CategoriasMatching] WITH CHECK CHECK CONSTRAINT [FK_CategoriasMatching_MapTo];

ALTER TABLE [dbo].[ComplementosMatching] WITH CHECK CHECK CONSTRAINT [FK_ComplementosMatching_MapTo];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Complemento];

ALTER TABLE [dbo].[ComplementosMatching] WITH CHECK CHECK CONSTRAINT [FK_ComplementosMatching_Fornecedor];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Marca];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Categoria];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Stock];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_StockSubstituto];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Imposto];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Produto];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Fornecedor];

ALTER TABLE [dbo].[Cotacoes] WITH CHECK CHECK CONSTRAINT [FK_Cotacoes_Estado];

ALTER TABLE [dbo].[CotacoesAvisos] WITH CHECK CHECK CONSTRAINT [FK_CotacoesAvisos_Fornecedor];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Fornecedor];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Marca];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Categoria];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Stock];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_StockSubstituto];

ALTER TABLE [dbo].[EstadosMatching] WITH CHECK CHECK CONSTRAINT [FK_EstadosMatching_MapTo];

ALTER TABLE [dbo].[EstadosMatching] WITH CHECK CHECK CONSTRAINT [FK_EstadosMatching_Fornecedor];

ALTER TABLE [dbo].[ProdutosDetalhe] WITH CHECK CHECK CONSTRAINT [FK_ProdutosDetalhe_Fornecedor];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Fornecedor];

ALTER TABLE [dbo].[ImpostosMatching] WITH CHECK CHECK CONSTRAINT [FK_ImpostosMatching_Fornecedor];

ALTER TABLE [dbo].[MarcasMatching] WITH CHECK CHECK CONSTRAINT [FK_MarcasMatching_Fornecedor];

ALTER TABLE [dbo].[ProdutosMatching] WITH CHECK CHECK CONSTRAINT [FK_ProdutosMatching_Fornecedor];

ALTER TABLE [dbo].[StocksMatching] WITH CHECK CHECK CONSTRAINT [FK_StocksMatching_Fornecedor];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Imposto];

ALTER TABLE [dbo].[ImpostosMatching] WITH CHECK CHECK CONSTRAINT [FK_ImpostosMatching_MapTo];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Marca];

ALTER TABLE [dbo].[MarcasMatching] WITH CHECK CHECK CONSTRAINT [FK_MarcasMatching_MapTo];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Stock];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Stock_U1];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Stock_U2];

ALTER TABLE [dbo].[Produtos] WITH CHECK CHECK CONSTRAINT [FK_Produtos_Stock_U3];

ALTER TABLE [dbo].[ProdutosDetalhe] WITH CHECK CHECK CONSTRAINT [FK_ProdutosDetalhe_Produto];

ALTER TABLE [dbo].[ProdutosMatching] WITH CHECK CHECK CONSTRAINT [FK_ProdutosMatching_MapTo];

ALTER TABLE [dbo].[ProdutosMatching] WITH CHECK CHECK CONSTRAINT [FK_ProdutosMatching_StockSubstituto];

ALTER TABLE [dbo].[StocksMatching] WITH CHECK CHECK CONSTRAINT [FK_StocksMatching_MapTo];


GO
PRINT N'Update complete.';


GO
