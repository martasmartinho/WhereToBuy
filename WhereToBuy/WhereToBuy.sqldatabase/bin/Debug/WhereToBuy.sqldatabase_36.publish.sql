/*
Deployment script for WhereToBuy

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WhereToBuy"
:setvar DefaultFilePrefix "WhereToBuy"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Latin1_General_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK ON,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- cria a base de dados se não exstir ainda
IF NOT EXISTS(SELECT [Name] FROM [SYS].[DATABASES] WHERE [Name] = 'WhereToBuy')
BEGIN
	CREATE DATABASE WhereToBuy COLLATE LATIN1_GENERAL_CI_AS	-- ATENÇÃO QUE TEM TAMBÉM QUE SE ALTERAR A COLLATION NAS PROPRIEDADES DESTE PROJETO
END						
GO

GO
PRINT N'Creating [dbo].[AvisosTipo]...';


GO
CREATE TABLE [dbo].[AvisosTipo] (
    [Codigo]    NVARCHAR (20)  NOT NULL,
    [Descricao] NVARCHAR (128) NOT NULL,
    [Gravidade] SMALLINT       NOT NULL,
    [Notas]     NVARCHAR (256) NULL,
    [Icon]      NVARCHAR (20)  NULL,
    [Inativo]   BIT            NOT NULL,
    [Criacao]   SMALLDATETIME  NOT NULL,
    [Versao]    DATETIME       NOT NULL,
    CONSTRAINT [PK_AvisosTipo] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Categorias]...';


GO
CREATE TABLE [dbo].[Categorias] (
    [Codigo]            NVARCHAR (20) NOT NULL,
    [Descricao]         NVARCHAR (50) NOT NULL,
    [PesoMedioUnidade]  FLOAT (53)    NOT NULL,
    [PrecoAmplitudeMax] TINYINT       NOT NULL,
    [Inativo]           BIT           NOT NULL,
    [Criacao]           SMALLDATETIME NOT NULL,
    [Versao]            DATETIME      NOT NULL,
    CONSTRAINT [PK_Categorias] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[CategoriasMatching]...';


GO
CREATE TABLE [dbo].[CategoriasMatching] (
    [FornecedorCodigo] NVARCHAR (20) NOT NULL,
    [Codigo]           NVARCHAR (20) NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [MapTo]            NVARCHAR (20) NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [PK_CategoriasMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Complementos]...';


GO
CREATE TABLE [dbo].[Complementos] (
    [Codigo]           NVARCHAR (20)  NOT NULL,
    [Descricao]        NVARCHAR (50)  NOT NULL,
    [TermoAcrescentar] NVARCHAR (50)  NULL,
    [TermosRemover]    NVARCHAR (100) NULL,
    [Inativo]          BIT            NOT NULL,
    [Criacao]          SMALLDATETIME  NOT NULL,
    [Versao]           DATETIME       NOT NULL,
    CONSTRAINT [PK_Complementos] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[ComplementosMatching]...';


GO
CREATE TABLE [dbo].[ComplementosMatching] (
    [FornecedorCodigo] NVARCHAR (20) NOT NULL,
    [Codigo]           NVARCHAR (20) NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [MapTo]            NVARCHAR (20) NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [PK_ComplementosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Cotacoes]...';


GO
CREATE TABLE [dbo].[Cotacoes] (
    [FornecedorCodigo]                  NVARCHAR (20)   NOT NULL,
    [Data]                              DATETIME        NOT NULL,
    [_ProdutoCodigo]                    NVARCHAR (30)   NOT NULL,
    [_ComplementoCodigo]                NVARCHAR (20)   NOT NULL,
    [_ComplementoDescricao]             NVARCHAR (50)   NOT NULL,
    [_Partnumber]                       NVARCHAR (25)   NOT NULL,
    [_MarcaCodigo]                      NVARCHAR (20)   NOT NULL,
    [_MarcaDescricao]                   NVARCHAR (50)   NOT NULL,
    [_CategoriaCodigo]                  NVARCHAR (20)   NOT NULL,
    [_CategoriaDescricao]               NVARCHAR (50)   NOT NULL,
    [_StockCodigo]                      NVARCHAR (20)   NOT NULL,
    [_StockDescricao]                   NVARCHAR (50)   NOT NULL,
    [_ImpostoCodigo]                    NVARCHAR (20)   NOT NULL,
    [_ImpostoDescricao]                 NVARCHAR (50)   NOT NULL,
    [_Descricao]                        NVARCHAR (256)  NOT NULL,
    [_Link]                             NVARCHAR (1024) NOT NULL,
    [_Caracteristicas]                  NVARCHAR (2048) NOT NULL,
    [_Preco]                            DECIMAL (14, 4) NOT NULL,
    [_OutrosCustos]                     DECIMAL (14, 4) NOT NULL,
    [_OutrosCustosDescricao]            NVARCHAR (128)  NOT NULL,
    [ComplementoCodigo]                 NVARCHAR (20)   NULL,
    [Partnumber]                        NVARCHAR (25)   NULL,
    [MarcaCodigo]                       NVARCHAR (20)   NULL,
    [CategoriaCodigo]                   NVARCHAR (20)   NULL,
    [StockCodigo]                       NVARCHAR (20)   NULL,
    [StockCodigoSubstituto]             NVARCHAR (20)   NULL,
    [StockCodigoSubstitutoJustificacao] NVARCHAR (256)  NULL,
    [ImpostoCodigo]                     NVARCHAR (20)   NULL,
    [Descricao]                         NVARCHAR (256)  NULL,
    [Link]                              NVARCHAR (1024) NULL,
    [Caracteristicas]                   NVARCHAR (2048) NULL,
    [PrecoCusto]                        DECIMAL (14, 4) NULL,
    [PrecoCustoFormula]                 NVARCHAR (256)  NULL,
    [Validade]                          SMALLDATETIME   NULL,
    [ValidadeFormula]                   NVARCHAR (256)  NULL,
    [ProdutoCodigo]                     NVARCHAR (40)   NULL,
    [Completo]                          BIT             NOT NULL,
    [Integrado]                         BIT             NOT NULL,
    [Inativo]                           BIT             NOT NULL,
    [Versao]                            DATETIME        NOT NULL,
    CONSTRAINT [PK_Cotacoes] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Data] ASC, [_ProdutoCodigo] ASC, [_ComplementoCodigo] ASC)
);


GO
PRINT N'Creating [dbo].[CotacoesAvisos]...';


GO
CREATE TABLE [dbo].[CotacoesAvisos] (
    [Id]                 UNIQUEIDENTIFIER NOT NULL,
    [Data]               SMALLDATETIME    NOT NULL,
    [_ProdutoCodigo]     NVARCHAR (30)    NOT NULL,
    [_ComplementoCodigo] NVARCHAR (20)    NOT NULL,
    [FornecedorCodigo]   NVARCHAR (20)    NOT NULL,
    [AvisoTipoCodigo]    NVARCHAR (20)    NOT NULL,
    [Descricao]          NVARCHAR (2048)  NOT NULL,
    [Criacao]            SMALLDATETIME    NOT NULL,
    CONSTRAINT [PK_CotacoesAvisos] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UC_CotacoesAvisos] UNIQUE NONCLUSTERED ([Data] ASC, [_ProdutoCodigo] ASC, [_ComplementoCodigo] ASC)
);


GO
PRINT N'Creating [dbo].[CotacoesRegras]...';


GO
CREATE TABLE [dbo].[CotacoesRegras] (
    [FornecedorCodigo]      NVARCHAR (20)  NOT NULL,
    [MarcaCodigo]           NVARCHAR (20)  NOT NULL,
    [CategoriaCodigo]       NVARCHAR (20)  NOT NULL,
    [StockCodigo]           NVARCHAR (20)  NOT NULL,
    [HorasValidade]         SMALLINT       NOT NULL,
    [StockCodigoSubstituto] NVARCHAR (20)  NULL,
    [DataReset]             SMALLDATETIME  NOT NULL,
    [Notas]                 NVARCHAR (256) NULL,
    CONSTRAINT [PK_CotacoesRegras] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [MarcaCodigo] ASC, [CategoriaCodigo] ASC, [StockCodigo] ASC)
);


GO
PRINT N'Creating [dbo].[Fornecedores]...';


GO
CREATE TABLE [dbo].[Fornecedores] (
    [Codigo]                               NVARCHAR (20)  NOT NULL,
    [Descricao]                            NVARCHAR (50)  NOT NULL,
    [Morada]                               NVARCHAR (200) NOT NULL,
    [CodigoPostal]                         NVARCHAR (15)  NOT NULL,
    [LocalidadePostal]                     NVARCHAR (50)  NOT NULL,
    [Contribuinte]                         NVARCHAR (20)  NOT NULL,
    [Telefone]                             NVARCHAR (20)  NULL,
    [Telemovel]                            NVARCHAR (15)  NOT NULL,
    [Email]                                NVARCHAR (100) NOT NULL,
    [AcessoOnlineAtivo]                    BIT            NOT NULL,
    [Username]                             NVARCHAR (20)  NOT NULL,
    [Password]                             NVARCHAR (20)  NOT NULL,
    [HorasValidadeSugestao]                SMALLINT       NOT NULL,
    [ProdutosMatchingAutomatico]           BIT            NOT NULL,
    [ProdutosCriacaoAutomatica]            BIT            NOT NULL,
    [DisponibilizaInfoProdutoDetalhe]      BIT            NOT NULL,
    [DescricaoPontuacaoInicial]            SMALLINT       NOT NULL,
    [CaracteristicasPontuacaoInicial]      SMALLINT       NOT NULL,
    [LinkPontuacaoInicial]                 SMALLINT       NOT NULL,
    [DescricaoSugereInativo]               BIT            NOT NULL,
    [CaracteristicasSugereInativo]         BIT            NOT NULL,
    [LinkSugereInativo]                    BIT            NOT NULL,
    [AtualizacaoAutomaticaInativaSugestao] BIT            NOT NULL,
    [ProdutosConfiancaPreco]               FLOAT (53)     NOT NULL,
    [ProdutosConfiancaDisponibilidade]     FLOAT (53)     NOT NULL,
    [Inativo]                              BIT            NOT NULL,
    [Criacao]                              SMALLDATETIME  NOT NULL,
    [Versao]                               DATETIME       NOT NULL,
    CONSTRAINT [PK_Fornecedores] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Impostos]...';


GO
CREATE TABLE [dbo].[Impostos] (
    [Codigo]           NVARCHAR (20) NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [DesignacaoFiscal] NVARCHAR (50) NOT NULL,
    [Taxa]             FLOAT (53)    NOT NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [PK_Impostos] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[ImpostosMatching]...';


GO
CREATE TABLE [dbo].[ImpostosMatching] (
    [FornecedorCodigo] NVARCHAR (20) NOT NULL,
    [Codigo]           NVARCHAR (20) NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [MapTo]            NVARCHAR (20) NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [PK_ImpostosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Marcas]...';


GO
CREATE TABLE [dbo].[Marcas] (
    [Codigo]    NVARCHAR (20) NOT NULL,
    [Descricao] NVARCHAR (50) NOT NULL,
    [Inativo]   BIT           NOT NULL,
    [Criacao]   SMALLDATETIME NOT NULL,
    [Versao]    DATETIME      NOT NULL,
    CONSTRAINT [PK_Marcas] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[MarcasMatching]...';


GO
CREATE TABLE [dbo].[MarcasMatching] (
    [FornecedorCodigo] NVARCHAR (20) NOT NULL,
    [Codigo]           NVARCHAR (20) NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [MapTo]            NVARCHAR (20) NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [PK_MarcasMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Produtos]...';


GO
CREATE TABLE [dbo].[Produtos] (
    [Codigo]             NVARCHAR (40)   NOT NULL,
    [Descricao]          NVARCHAR (256)  NOT NULL,
    [Partnumber]         NVARCHAR (25)   NOT NULL,
    [CategoriaCodigo]    NVARCHAR (20)   NOT NULL,
    [MarcaCodigo]        NVARCHAR (20)   NOT NULL,
    [ImpostoCodigo]      NVARCHAR (20)   NOT NULL,
    [FornecedorCodigo]   NVARCHAR (20)   NOT NULL,
    [PrecoCusto]         DECIMAL (14, 4) NULL,
    [PrecoCusto_Data]    SMALLDATETIME   NULL,
    [PrecoCusto_U1]      DECIMAL (14, 4) NULL,
    [PrecoCusto_U1Data]  SMALLDATETIME   NULL,
    [PrecoCusto_U2]      DECIMAL (14, 4) NULL,
    [PrecoCusto_U2Data]  SMALLDATETIME   NULL,
    [PrecoCusto_U3]      DECIMAL (14, 4) NULL,
    [PrecoCusto_U3Data]  SMALLDATETIME   NULL,
    [StockCodigo]        NVARCHAR (20)   NULL,
    [StockCodigo_Data]   SMALLDATETIME   NULL,
    [StockCodigo_U1]     NVARCHAR (20)   NULL,
    [StockCodigo_U1Data] SMALLDATETIME   NULL,
    [StockCodigo_U2]     NVARCHAR (20)   NULL,
    [StockCodigo_U2Data] SMALLDATETIME   NULL,
    [StockCodigo_U3]     NVARCHAR (20)   NULL,
    [StockCodigo_U3Data] SMALLDATETIME   NULL,
    [Descontinuado]      BIT             NOT NULL,
    [Inativo]            BIT             NOT NULL,
    [Criacao]            SMALLDATETIME   NOT NULL,
    [Versao]             DATETIME        NOT NULL,
    CONSTRAINT [PK_Produtos] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[ProdutosDetalhe]...';


GO
CREATE TABLE [dbo].[ProdutosDetalhe] (
    [ProdutoCodigo]                NVARCHAR (40)   NOT NULL,
    [FornecedorCodigo]             NVARCHAR (20)   NOT NULL,
    [Descricao]                    NVARCHAR (256)  NOT NULL,
    [DescricaoPontuacao]           SMALLINT        NOT NULL,
    [DescricaoInativa]             BIT             NOT NULL,
    [Caracteristicas]              NVARCHAR (2048) NOT NULL,
    [CaracteristicasPontuacao]     SMALLINT        NOT NULL,
    [CaracteristicasInativas]      BIT             NOT NULL,
    [Link]                         NVARCHAR (1024) NOT NULL,
    [LinkPontuacao]                SMALLINT        NOT NULL,
    [LinkInativo]                  BIT             NOT NULL,
    [AtualizacaoAutomaticaInativa] BIT             NOT NULL,
    [AtualizacaoManualNecessaria]  BIT             NOT NULL,
    [IndicePreocupacaoConteudo]    TINYINT         NOT NULL,
    [Criacao]                      SMALLDATETIME   NOT NULL,
    [Versao]                       DATETIME        NOT NULL,
    CONSTRAINT [PK_ProdutosDetalhe] PRIMARY KEY CLUSTERED ([ProdutoCodigo] ASC, [FornecedorCodigo] ASC)
);


GO
PRINT N'Creating [dbo].[ProdutosMatching]...';


GO
CREATE TABLE [dbo].[ProdutosMatching] (
    [FornecedorCodigo]                  NVARCHAR (20)  NOT NULL,
    [ComplementoCodigo]                 NVARCHAR (20)  NOT NULL,
    [Codigo]                            NVARCHAR (20)  NOT NULL,
    [Descricao]                         NVARCHAR (50)  NOT NULL,
    [MapTo]                             NVARCHAR (40)  NULL,
    [HorasValidadeCotacao]              SMALLINT       NULL,
    [StockCodigoSubstituto]             NVARCHAR (20)  NULL,
    [DispensaPrevencaoPrecosDesfazados] BIT            NULL,
    [DataReset]                         SMALLDATETIME  NULL,
    [Notas]                             NVARCHAR (256) NULL,
    [Inativo]                           BIT            NOT NULL,
    [Criacao]                           SMALLDATETIME  NOT NULL,
    [Versao]                            DATETIME       NOT NULL,
    CONSTRAINT [PK_ProdutosMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [ComplementoCodigo] ASC, [Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Stocks]...';


GO
CREATE TABLE [dbo].[Stocks] (
    [Codigo]               NVARCHAR (20)  NOT NULL,
    [Descricao]            NVARCHAR (50)  NOT NULL,
    [DisponibilidadeNivel] SMALLINT       NOT NULL,
    [Notas]                NVARCHAR (256) NULL,
    [Inativo]              BIT            NOT NULL,
    [Criacao]              SMALLDATETIME  NOT NULL,
    [Versao]               DATETIME       NOT NULL,
    CONSTRAINT [PK_Stocks] PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[StocksMatching]...';


GO
CREATE TABLE [dbo].[StocksMatching] (
    [FornecedorCodigo] NVARCHAR (20) NOT NULL,
    [Codigo]           NVARCHAR (20) NOT NULL,
    [Descricao]        NVARCHAR (50) NOT NULL,
    [MapTo]            NVARCHAR (20) NULL,
    [Inativo]          BIT           NOT NULL,
    [Criacao]          SMALLDATETIME NOT NULL,
    [Versao]           DATETIME      NOT NULL,
    CONSTRAINT [PK_StocksMatching] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [Codigo] ASC)
);


GO
PRINT N'Creating FK_CategoriasMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[CategoriasMatching]
    ADD CONSTRAINT [FK_CategoriasMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CategoriasMatching_MapTo...';


GO
ALTER TABLE [dbo].[CategoriasMatching]
    ADD CONSTRAINT [FK_CategoriasMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_ComplementosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ComplementosMatching]
    ADD CONSTRAINT [FK_ComplementosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ComplementosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ComplementosMatching]
    ADD CONSTRAINT [FK_ComplementosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Complementos] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Fornecedor...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Complemento...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Complemento] FOREIGN KEY ([ComplementoCodigo]) REFERENCES [dbo].[Complementos] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Marca...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Categoria...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Categoria] FOREIGN KEY ([CategoriaCodigo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Stock...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_StockSubstituto...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Imposto...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Imposto] FOREIGN KEY ([ImpostoCodigo]) REFERENCES [dbo].[Impostos] ([Codigo]);


GO
PRINT N'Creating FK_Cotacoes_Produto...';


GO
ALTER TABLE [dbo].[Cotacoes]
    ADD CONSTRAINT [FK_Cotacoes_Produto] FOREIGN KEY ([ProdutoCodigo]) REFERENCES [dbo].[Produtos] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesAvisos_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesAvisos]
    ADD CONSTRAINT [FK_CotacoesAvisos_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesAvisos_AvisoTipo...';


GO
ALTER TABLE [dbo].[CotacoesAvisos]
    ADD CONSTRAINT [FK_CotacoesAvisos_AvisoTipo] FOREIGN KEY ([AvisoTipoCodigo]) REFERENCES [dbo].[AvisosTipo] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesRegras]
    ADD CONSTRAINT [FK_CotacoesRegras_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Marca...';


GO
ALTER TABLE [dbo].[CotacoesRegras]
    ADD CONSTRAINT [FK_CotacoesRegras_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Categoria...';


GO
ALTER TABLE [dbo].[CotacoesRegras]
    ADD CONSTRAINT [FK_CotacoesRegras_Categoria] FOREIGN KEY ([CategoriaCodigo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Stock...';


GO
ALTER TABLE [dbo].[CotacoesRegras]
    ADD CONSTRAINT [FK_CotacoesRegras_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_StockSubstituto...';


GO
ALTER TABLE [dbo].[CotacoesRegras]
    ADD CONSTRAINT [FK_CotacoesRegras_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_ImpostosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ImpostosMatching]
    ADD CONSTRAINT [FK_ImpostosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ImpostosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ImpostosMatching]
    ADD CONSTRAINT [FK_ImpostosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Impostos] ([Codigo]);


GO
PRINT N'Creating FK_MarcasMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[MarcasMatching]
    ADD CONSTRAINT [FK_MarcasMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_MarcasMatching_MapTo...';


GO
ALTER TABLE [dbo].[MarcasMatching]
    ADD CONSTRAINT [FK_MarcasMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Categoria...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Categoria] FOREIGN KEY ([CategoriaCodigo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Marca...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Imposto...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Imposto] FOREIGN KEY ([ImpostoCodigo]) REFERENCES [dbo].[Impostos] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Fornecedor...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock_U1...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Stock_U1] FOREIGN KEY ([StockCodigo_U1]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock_U2...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Stock_U2] FOREIGN KEY ([StockCodigo_U2]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_Produtos_Stock_U3...';


GO
ALTER TABLE [dbo].[Produtos]
    ADD CONSTRAINT [FK_Produtos_Stock_U3] FOREIGN KEY ([StockCodigo_U3]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosDetalhe_Produto...';


GO
ALTER TABLE [dbo].[ProdutosDetalhe]
    ADD CONSTRAINT [FK_ProdutosDetalhe_Produto] FOREIGN KEY ([ProdutoCodigo]) REFERENCES [dbo].[Produtos] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosDetalhe_Fornecedor...';


GO
ALTER TABLE [dbo].[ProdutosDetalhe]
    ADD CONSTRAINT [FK_ProdutosDetalhe_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[ProdutosMatching]
    ADD CONSTRAINT [FK_ProdutosMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosMatching_MapTo...';


GO
ALTER TABLE [dbo].[ProdutosMatching]
    ADD CONSTRAINT [FK_ProdutosMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Produtos] ([Codigo]);


GO
PRINT N'Creating FK_ProdutosMatching_StockSubstituto...';


GO
ALTER TABLE [dbo].[ProdutosMatching]
    ADD CONSTRAINT [FK_ProdutosMatching_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_StocksMatching_Fornecedor...';


GO
ALTER TABLE [dbo].[StocksMatching]
    ADD CONSTRAINT [FK_StocksMatching_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_StocksMatching_MapTo...';


GO
ALTER TABLE [dbo].[StocksMatching]
    ADD CONSTRAINT [FK_StocksMatching_MapTo] FOREIGN KEY ([MapTo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


/* IMPOSTOS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Impostos])
BEGIN	
	INSERT INTO [dbo].[Impostos] ([Codigo], [Descricao], [DesignacaoFiscal], [Taxa], [Inativo], [Criacao], [Versao])
		VALUES ('IVA.PTC.N23', 'IVA PT Continental - Taxa Normal de 23%', 'IVA PT.Continental 23%', 23.00, CAST('false' AS bit), GETDATE(), GETDATE())
END


/* COMPLEMENTOS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Complementos])
BEGIN	
	INSERT INTO [dbo].[Complementos] ([Codigo], [Descricao], [TermoAcrescentar], [TermosRemover], [Inativo], [Criacao], [Versao])
		VALUES ('N/A', 'Não aplicável', NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE())
END


/* AVISOSTIPO */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[AvisosTipo])
BEGIN	
	INSERT INTO [dbo].[AvisosTipo] ([Codigo], [Descricao], [Gravidade], [Notas], [Icon], [Inativo], [Criacao], [Versao])
		 VALUES ('PFS', 'Prevenção Falso Stock', 3, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('IAPD', 'Inativação Administrativa (Prevenção Preço Desfazado)', 7, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CICM0', 'Cotação Incompleta [Complemento] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CICM1', 'Cotação Incompleta [Complemento] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIMM0', 'Cotação Incompleta [Marca] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIMM1', 'Cotação Incompleta [Marca] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CITM0', 'Cotação Incompleta [Categoria] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CITM1', 'Cotação Incompleta [Categoria] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CISM0', 'Cotação Incompleta [Stock] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CISM1', 'Cotação Incompleta [Stock] (mapeamento inativo)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIIM0', 'Cotação Incompleta [Imposto] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIIM1', 'Cotação Incompleta [Imposto] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM0', 'Cotação Incompleta [Produto] (mapeamento incompleto, preenchimento manual necessário)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM1', 'Cotação Incompleta [Produto] (mapeamento inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM2', 'Cotação Incompleta [Produto] (fornecedor configurado para não criar automaticamente fichas de produtos)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM3', 'Cotação Incompleta [Produto] (fornecedor configurado para não mapear automaticamente produtos)', 6, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM4', 'Cotação Incompleta [Produto] (produto inativo)', 2, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('CIPM9', 'Cotação Incompleta [Produto] (ambiguidade detetada com outro partnumber de outra marca)', 8, NULL, NULL, CAST('false' AS bit), GETDATE(), GETDATE())

END



/* STOCKS */
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Stocks])
BEGIN	
	INSERT INTO [dbo].[Stocks] ([Codigo], [Descricao], [DisponibilidadeNivel], [Notas], [Inativo], [Criacao], [Versao])
		 VALUES ('D-5','Indisponivel permanentemente', -5, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-4','Indisponivel sob encomenda (dias entrega: +40)', -4, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-3','Indisponivel sob encomenda (dias entrega: +25)', -3, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-2','Indisponivel sob encomenda (dias entrega: +10)', -2, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D-1','Indisponivel sob encomenda (dias entrega: +6)', -1, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+0','Indisponivel momentaneamente (dias entrega: +2)', 0, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+1','Disponivel, stock reduzido', 1, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+2','Disponivel, stock limitado', 2, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+3','Disponivel, stock normal', 3, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+4','Disponivel, stock abundante', 4, NULL, CAST('false' AS bit), GETDATE(), GETDATE()),
				('D+5','Disponivel permanentemente', 5, NULL, CAST('false' AS bit), GETDATE(), GETDATE())
END
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
