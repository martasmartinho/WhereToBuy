/*
Deployment script for WhereToBuy

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WhereToBuy"
:setvar DefaultFilePrefix "WhereToBuy"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- cria a base de dados se não exstir ainda
IF NOT EXISTS(SELECT [Name] FROM [SYS].[DATABASES] WHERE [Name] = 'WhereToBuy')
BEGIN
	CREATE DATABASE WhereToBuy COLLATE LATIN1_GENERAL_CI_AS	-- ATENÇÃO QUE TEM TAMBÉM QUE SE ALTERAR A COLLATION NAS PROPRIEDADES DESTE PROJETO
END						
GO

GO
PRINT N'Creating [dbo].[CotacoesRegras]...';


GO
CREATE TABLE [dbo].[CotacoesRegras] (
    [FornecedorCodigo]      NVARCHAR (20)  NOT NULL,
    [MarcaCodigo]           NVARCHAR (20)  NOT NULL,
    [CategoriaCodigo]       NVARCHAR (20)  NOT NULL,
    [StockCodigo]           NVARCHAR (20)  NOT NULL,
    [HorasValidade]         SMALLINT       NOT NULL,
    [StockCodigoSubstituto] NVARCHAR (20)  NULL,
    [DataReset]             SMALLDATETIME  NOT NULL,
    [Notas]                 NVARCHAR (256) NULL,
    CONSTRAINT [PK_CotacoesRegras] PRIMARY KEY CLUSTERED ([FornecedorCodigo] ASC, [MarcaCodigo] ASC, [CategoriaCodigo] ASC, [StockCodigo] ASC)
);


GO
PRINT N'Creating FK_CotacoesRegras_Fornecedor...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Fornecedor] FOREIGN KEY ([FornecedorCodigo]) REFERENCES [dbo].[Fornecedores] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Marca...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Marca] FOREIGN KEY ([MarcaCodigo]) REFERENCES [dbo].[Marcas] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Categoria...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Categoria] FOREIGN KEY ([CategoriaCodigo]) REFERENCES [dbo].[Categorias] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_Stock...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_Stock] FOREIGN KEY ([StockCodigo]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
PRINT N'Creating FK_CotacoesRegras_StockSubstituto...';


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH NOCHECK
    ADD CONSTRAINT [FK_CotacoesRegras_StockSubstituto] FOREIGN KEY ([StockCodigoSubstituto]) REFERENCES [dbo].[Stocks] ([Codigo]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


/*IMPOSTOS*/
IF NOT EXISTS(SELECT [Codigo] FROM [dbo].[Impostos])
BEGIN	
	INSERT INTO [dbo].[Impostos] ([Codigo], [Descricao], [DesignacaoFiscal], [Taxa], [Inativo], [Criacao], [Versao])
		VALUES ('IVA.PTC.N23', 'IVA PT Continental - Taxa Normal de 23%', 'IVA PT.Continental 23%', 23.00, CAST('false' AS bit), GETDATE(), GETDATE())
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Fornecedor];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Marca];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Categoria];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_Stock];

ALTER TABLE [dbo].[CotacoesRegras] WITH CHECK CHECK CONSTRAINT [FK_CotacoesRegras_StockSubstituto];


GO
PRINT N'Update complete.';


GO
